{"version":3,"sources":["redux/store.js","redux/reducer.js","redux/actions.js","components/Header.js","components/AddInput.js","components/AddButton.js","components/Form.js","components/TodoItem.js","components/TodoList.js","components/NoTasksMessage.js","App.js","index.js"],"names":["store","createStore","state","action","type","push","payload","filter","todo","id","map","completed","Header","className","AddInput","inputRef","useRef","useEffect","current","focus","placeholder","name","ref","AddButton","Form","dispatch","useDispatch","onSubmit","e","preventDefault","inputValue","target","elements","add","value","trim","title","Date","now","TodoItem","index","checked","onChange","onClick","TodoList","todos","key","NoTasksMessage","App","useSelector","length","ReactDOM","render","document","getElementById"],"mappings":"kNAGaA,EAAQC,aCDE,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC7C,OAAQA,EAAOC,MACb,ICJoB,WDKlBF,EAAMG,KAAKF,EAAOG,SACpB,ICLuB,cDMrB,OAAOJ,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAON,EAAOG,WACjD,ICNuB,cDOrB,OAAOJ,EAAMQ,KAAI,SAAAF,GAIf,OAHIA,EAAKC,KAAON,EAAOG,UACrBE,EAAKG,WAAaH,EAAKG,WAElBH,KAGb,OAAON,KEZMU,EAFA,kBAAM,wBAAIC,UAAU,UAAd,wECeNC,EAfE,WACf,IAAMC,EAAWC,mBAIjB,OAFAC,qBAAU,kBAAMF,EAASG,QAAQC,WAG/B,2BACEN,UAAU,YACVO,YAAY,iGACZC,KAAK,MACLC,IAAKP,KCJIQ,EANG,kBAChB,4BAAQV,UAAU,UAAUT,KAAK,UAC/B,0BAAMS,UAAU,qBAAhB,QADF,sDC+BaW,EA5BF,WACX,IAAMC,EAAWC,cAmBjB,OACE,0BAAMb,UAAU,OAAOc,SAlBJ,SAAAC,GACnBA,EAAEC,iBACF,IAAIC,EAAaF,EAAEG,OAAOC,SAASC,IAAIC,MAAMC,OAEzCL,IACFL,EJV0B,CAC9BrB,KALsB,WAMtBE,QISc,CACN8B,MAAON,EACPrB,GAAI4B,KAAKC,MACT3B,WAAW,KAIfiB,EAAEG,OAAOC,SAASC,IAAIC,MAAQ,MAM9B,kBAAC,EAAD,MACA,kBAAC,EAAD,QCISK,EA7BE,SAAC,GAAqB,IAAnB/B,EAAkB,EAAlBA,KAAMgC,EAAY,EAAZA,MAClBf,EAAWC,cAEjB,OACE,+BACE,wBAAIb,UAAU,aACZ,yBAAKA,UAAU,cACb,2BACEA,UAAU,eACVT,KAAK,WACLqC,QAASjC,EAAKG,UACd+B,SAAU,kBAAMjB,ELDK,CAC/BrB,KAbyB,cAczBE,QKD8CE,EAAKC,QAE3C,0BAAMI,UAAU,iBAChB,0BAAMA,UAAU,eAAe2B,EAAQ,GACvC,0BAAM3B,UAAU,cAAcL,EAAK4B,QAGrC,4BACEvB,UAAU,SACV8B,QAAS,kBAAMlB,ELfQ,CAC/BrB,KATyB,cAUzBE,QKa2CE,EAAKC,OAF1C,WCPOmC,EAZE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,wBAAIhC,UAAU,aACXgC,EAAMnC,KAAI,SAACF,EAAMgC,GAAP,OACT,kBAAC,EAAD,CACEhC,KAAMA,EACNsC,IAAKtC,EAAKC,GACV+B,MAAOA,SCAAO,EAPQ,kBACrB,yBAAKlC,UAAU,YACb,uBAAGA,UAAU,gBAAb,iGACA,uBAAGA,UAAU,gBAAb,qMCgBWmC,G,YAZH,WACV,IAAMH,EAAQI,aAAY,SAAA/C,GAAK,OAAIA,KAEnC,OACE,yBAAKW,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACEgC,EAAMK,OAA8B,kBAAC,EAAD,CAAUL,MAAOA,IAAtC,kBAAC,EAAD,SCVvBM,IAASC,OACP,kBAAC,IAAD,CAAUpD,MAAOA,GACf,kBAAC,EAAD,OAEFqD,SAASC,eAAe,U","file":"static/js/main.69a79181.chunk.js","sourcesContent":["import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport const store = createStore(reducer);\r\n","import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from \"./actions\";\r\n\r\nexport const reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      state.push(action.payload);\r\n    case REMOVE_TODO:\r\n      return state.filter(todo => todo.id !== action.payload);\r\n    case TOGGLE_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      });\r\n  }\r\n  return state;\r\n};\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\n\r\nexport const addTodo = todo => ({\r\n  type: ADD_TODO,\r\n  payload: todo\r\n});\r\n\r\nexport const removeTodo = id => ({\r\n  type: REMOVE_TODO,\r\n  payload: id\r\n});\r\n\r\nexport const toggleTodo = id => ({\r\n  type: TOGGLE_TODO,\r\n  payload: id\r\n});\r\n","import React from \"react\";\r\n\r\nconst Header = () => <h1 className=\"header\">Список задач</h1>;\r\n\r\nexport default Header;","import React, { useRef, useEffect } from \"react\";\r\n\r\nconst AddInput = () => {\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => inputRef.current.focus());\r\n\r\n  return (\r\n    <input\r\n      className=\"add-input\"\r\n      placeholder=\"Что нужно сделать ?\"\r\n      name=\"add\"\r\n      ref={inputRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddInput;\r\n","import React from \"react\";\r\n\r\nconst AddButton = () => (\r\n  <button className=\"add-btn\" type=\"submit\">\r\n    <span className=\"add-btn-plus-sign\">&times;</span> Добавить\r\n  </button>\r\n);\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport AddInput from \"./AddInput\";\r\nimport AddButton from \"./AddButton\";\r\nimport { addTodo } from \"../redux/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Form = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    let inputValue = e.target.elements.add.value.trim();\r\n\r\n    if (inputValue) {\r\n      dispatch(\r\n        addTodo({\r\n          title: inputValue,\r\n          id: Date.now(),\r\n          completed: false\r\n        })\r\n      );\r\n\r\n      e.target.elements.add.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <AddInput />\r\n      <AddButton />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { toggleTodo, removeTodo } from \"../redux/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst TodoItem = ({ todo, index }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label>\r\n      <li className=\"todo-item\">\r\n        <div className=\"input-wrap\">\r\n          <input\r\n            className=\"check-custom\"\r\n            type=\"checkbox\"\r\n            checked={todo.completed}\r\n            onChange={() => dispatch(toggleTodo(todo.id))}\r\n          />\r\n          <span className=\"check-toggle\" />\r\n          <span className=\"task-number\">{index + 1}</span>\r\n          <span className=\"task-title\">{todo.title}</span>\r\n        </div>\r\n\r\n        <button\r\n          className=\"rm-btn\"\r\n          onClick={() => dispatch(removeTodo(todo.id))}\r\n        >\r\n          &times;\r\n        </button>\r\n      </li>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = ({ todos }) => (\r\n  <ul className=\"todo-list\">\r\n    {todos.map((todo, index) => (\r\n      <TodoItem\r\n        todo={todo}\r\n        key={todo.id}\r\n        index={index}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nconst NoTasksMessage = () => (\r\n  <div className=\"no-tasks\">\r\n    <p className=\"no-tasks-msg\">Список задач пуст.</p>\r\n    <p className=\"no-tasks-msg\">Добавьте задачу чтобы начать работу.</p>\r\n  </div>\r\n);\r\n\r\nexport default NoTasksMessage;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Header from \"./components/Header\";\r\nimport Form from \"./components/Form\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport NoTasksMessage from \"./components/NoTasksMessage\";\r\nimport \"./styles/style.css\";\r\nimport \"./styles/media.css\";\r\n\r\nconst App = () => {\r\n  const todos = useSelector(state => state);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      <Form />\r\n      {!todos.length ? <NoTasksMessage /> : <TodoList todos={todos} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}